import PropTypes from 'prop-types';

export default {
  width: PropTypes.number,
  height: PropTypes.number,
  backgroundColor: PropTypes.string,

  globeImageUrl: PropTypes.string,
  bumpImageUrl: PropTypes.string,
  showAtmosphere: PropTypes.bool,
  showGraticules: PropTypes.bool,

  pointsData: PropTypes.arrayOf(PropTypes.object),
  pointLat: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  pointLng: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  pointColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  pointAltitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  pointRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  pointResolution: PropTypes.number,
  pointsMerge: PropTypes.bool,
  pointsTransitionDuration: PropTypes.number,
  pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  onPointClick: PropTypes.func,
  onPointRightClick: PropTypes.func,
  onPointHover: PropTypes.func,

  arcsData: PropTypes.arrayOf(PropTypes.object),
  arcStartLat: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcStartLng: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcEndLat: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcEndLng: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  arcAltitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcAltitudeAutoScale: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcStroke: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcCurveResolution: PropTypes.number,
  arcCircularResolution: PropTypes.number,
  arcDashLength: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcDashGap: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcDashInitialGap: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcDashAnimateTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  arcsTransitionDuration: PropTypes.number,
  arcLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  onArcClick: PropTypes.func,
  onArcRightClick: PropTypes.func,
  onArcHover: PropTypes.func,

  polygonsData: PropTypes.arrayOf(PropTypes.object),
  polygonGeoJsonGeometry: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  polygonCapColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  polygonSideColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  polygonAltitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  polygonsTransitionDuration: PropTypes.number,
  polygonLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  onPolygonClick: PropTypes.func,
  onPolygonRightClick: PropTypes.func,
  onPolygonHover: PropTypes.func,

  hexBinPointsData: PropTypes.arrayOf(PropTypes.object),
  hexBinPointLat: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  hexBinPointLng: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  hexBinPointWeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  hexRadius: PropTypes.number,
  hexMargin: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),
  hexColor: PropTypes.string,
  hexAltitude: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),
  hexBinMerge: PropTypes.bool,
  hexTransitionDuration: PropTypes.number,
  hexLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  onHexClick: PropTypes.func,
  onHexRightClick: PropTypes.func,
  onHexHover: PropTypes.func,

  labelsData: PropTypes.arrayOf(PropTypes.object),
  labelLat: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  labelLng: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  labelAltitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  labelRotation: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  labelText: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  labelSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  labelTypeFace: PropTypes.object,
  labelColor: PropTypes.string,
  labelResolution: PropTypes.number,
  labelIncludeDot: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.func]),
  labelDotRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),
  labelDotOrientation: PropTypes.oneOf(['right', 'top', 'bottom']),
  labelsTransitionDuration: PropTypes.number,
  labelLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  onLabelClick: PropTypes.func,
  onLabelRightClick: PropTypes.func,
  onLabelHover: PropTypes.func,

  customLayerData: PropTypes.arrayOf(PropTypes.object),
  customThreeObject: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),
  customThreeObjectUpdate: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  customLayerLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  onCustomLayerClick: PropTypes.func,
  onCustomLayerRightClick: PropTypes.func,
  onCustomLayerHover: PropTypes.func,

  enablePointerInteraction: PropTypes.bool
};
